(
0:
AssignmentStmt -> . IDENTIFIER = Expression 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT ElifList 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT ElseClause 
PrintStmt -> . print ( Expression ) 
Program -> . StmtList 
S' -> . Program 
Statement -> . AssignmentStmt 
Statement -> . IfStmt 
Statement -> . PrintStmt 
StmtList -> .
StmtList -> . IfStmt StmtList 
StmtList -> . Statement 
StmtList -> . Statement NEWLINE StmtList 

1:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Condition -> . Expression 
Condition -> . Expression RelOp Expression 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
IfStmt -> if . Condition : NEWLINE INDENT StmtList DEDENT 
IfStmt -> if . Condition : NEWLINE INDENT StmtList DEDENT ElifList 
IfStmt -> if . Condition : NEWLINE INDENT StmtList DEDENT ElseClause 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

2:
PrintStmt -> print . ( Expression ) 

3:
AssignmentStmt -> IDENTIFIER . = Expression 

4:
S' -> Program .

5:
Program -> StmtList .

6:
StmtList -> Statement .
StmtList -> Statement . NEWLINE StmtList 

7:
Statement -> PrintStmt .

8:
AssignmentStmt -> . IDENTIFIER = Expression 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT ElifList 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT ElseClause 
PrintStmt -> . print ( Expression ) 
Statement -> . AssignmentStmt 
Statement -> . IfStmt 
Statement -> IfStmt .
Statement -> . PrintStmt 
StmtList -> .
StmtList -> . IfStmt StmtList 
StmtList -> IfStmt . StmtList 
StmtList -> . Statement 
StmtList -> . Statement NEWLINE StmtList 

9:
Statement -> AssignmentStmt .

10:
CONSTANT -> INTEGER .

11:
CONSTANT -> BOOLEAN .

12:
Expression -> bool . ( Expression ) 

13:
CONSTANT -> FLOAT .

14:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> ( . Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

15:
Expression -> input . ( ) 
Expression -> input . ( Expression ) 

16:
Primary -> IDENTIFIER .

17:
CONSTANT -> STRING .

18:
Expression -> float . ( Expression ) 

19:
Expression -> list . ( Expression ) 

20:
Expression -> str . ( Expression ) 

21:
Expression -> int . ( Expression ) 

22:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
ListElements -> .
ListElements -> . Expression 
ListElements -> . Expression , ListElements 
ListLiteral -> . [ ListElements ] 
ListLiteral -> [ . ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

23:
Postfix -> Primary .
Postfix -> Primary . [ Expression ] 

24:
Expression -> Term .
Term -> Term . * Postfix 
Term -> Term . / Postfix 

25:
Primary -> CONSTANT .

26:
Condition -> Expression .
Condition -> Expression . RelOp Expression 
Expression -> Expression . + Term 
Expression -> Expression . - Term 
RelOp -> . != 
RelOp -> . < 
RelOp -> . <= 
RelOp -> . == 
RelOp -> . > 
RelOp -> . >= 

27:
Term -> Postfix .

28:
IfStmt -> if Condition . : NEWLINE INDENT StmtList DEDENT 
IfStmt -> if Condition . : NEWLINE INDENT StmtList DEDENT ElifList 
IfStmt -> if Condition . : NEWLINE INDENT StmtList DEDENT ElseClause 

29:
Primary -> ListLiteral .

30:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
PrintStmt -> print ( . Expression ) 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

31:
AssignmentStmt -> IDENTIFIER = . Expression 
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

32:
AssignmentStmt -> . IDENTIFIER = Expression 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT ElifList 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT ElseClause 
PrintStmt -> . print ( Expression ) 
Statement -> . AssignmentStmt 
Statement -> . IfStmt 
Statement -> . PrintStmt 
StmtList -> .
StmtList -> . IfStmt StmtList 
StmtList -> . Statement 
StmtList -> . Statement NEWLINE StmtList 
StmtList -> Statement NEWLINE . StmtList 

33:
StmtList -> IfStmt StmtList .

34:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> bool ( . Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

35:
Expression -> Expression . + Term 
Expression -> Expression . - Term 
Primary -> ( Expression . ) 

36:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> input ( . ) 
Expression -> . input ( Expression ) 
Expression -> input ( . Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

37:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> float ( . Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

38:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> list ( . Expression ) 
Expression -> . str ( Expression ) 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

39:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
Expression -> str ( . Expression ) 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

40:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> int ( . Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

41:
ListLiteral -> [ ListElements . ] 

42:
Expression -> Expression . + Term 
Expression -> Expression . - Term 
ListElements -> Expression .
ListElements -> Expression . , ListElements 

43:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Postfix -> Primary [ . Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

44:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> Term * . Postfix 

45:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> Term / . Postfix 

46:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> Expression - . Term 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

47:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> Expression + . Term 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

48:
RelOp -> < .

49:
RelOp -> != .

50:
RelOp -> > .

51:
RelOp -> <= .

52:
RelOp -> >= .

53:
RelOp -> == .

54:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Condition -> Expression RelOp . Expression 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

55:
IfStmt -> if Condition : . NEWLINE INDENT StmtList DEDENT 
IfStmt -> if Condition : . NEWLINE INDENT StmtList DEDENT ElifList 
IfStmt -> if Condition : . NEWLINE INDENT StmtList DEDENT ElseClause 

56:
Expression -> Expression . + Term 
Expression -> Expression . - Term 
PrintStmt -> print ( Expression . ) 

57:
AssignmentStmt -> IDENTIFIER = Expression .
Expression -> Expression . + Term 
Expression -> Expression . - Term 

58:
StmtList -> Statement NEWLINE StmtList .

59:
Expression -> Expression . + Term 
Expression -> Expression . - Term 
Expression -> bool ( Expression . ) 

60:
Primary -> ( Expression ) .

61:
Expression -> input ( ) .

62:
Expression -> Expression . + Term 
Expression -> Expression . - Term 
Expression -> input ( Expression . ) 

63:
Expression -> Expression . + Term 
Expression -> Expression . - Term 
Expression -> float ( Expression . ) 

64:
Expression -> Expression . + Term 
Expression -> Expression . - Term 
Expression -> list ( Expression . ) 

65:
Expression -> Expression . + Term 
Expression -> Expression . - Term 
Expression -> str ( Expression . ) 

66:
Expression -> Expression . + Term 
Expression -> Expression . - Term 
Expression -> int ( Expression . ) 

67:
ListLiteral -> [ ListElements ] .

68:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
ListElements -> .
ListElements -> . Expression 
ListElements -> . Expression , ListElements 
ListElements -> Expression , . ListElements 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

69:
Expression -> Expression . + Term 
Expression -> Expression . - Term 
Postfix -> Primary [ Expression . ] 

70:
Term -> Term * Postfix .

71:
Term -> Term / Postfix .

72:
Expression -> Expression - Term .
Term -> Term . * Postfix 
Term -> Term . / Postfix 

73:
Expression -> Expression + Term .
Term -> Term . * Postfix 
Term -> Term . / Postfix 

74:
Condition -> Expression RelOp Expression .
Expression -> Expression . + Term 
Expression -> Expression . - Term 

75:
IfStmt -> if Condition : NEWLINE . INDENT StmtList DEDENT 
IfStmt -> if Condition : NEWLINE . INDENT StmtList DEDENT ElifList 
IfStmt -> if Condition : NEWLINE . INDENT StmtList DEDENT ElseClause 

76:
PrintStmt -> print ( Expression ) .

77:
Expression -> bool ( Expression ) .

78:
Expression -> input ( Expression ) .

79:
Expression -> float ( Expression ) .

80:
Expression -> list ( Expression ) .

81:
Expression -> str ( Expression ) .

82:
Expression -> int ( Expression ) .

83:
ListElements -> Expression , ListElements .

84:
Postfix -> Primary [ Expression ] .

85:
AssignmentStmt -> . IDENTIFIER = Expression 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT 
IfStmt -> if Condition : NEWLINE INDENT . StmtList DEDENT 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT ElifList 
IfStmt -> if Condition : NEWLINE INDENT . StmtList DEDENT ElifList 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT ElseClause 
IfStmt -> if Condition : NEWLINE INDENT . StmtList DEDENT ElseClause 
PrintStmt -> . print ( Expression ) 
Statement -> . AssignmentStmt 
Statement -> . IfStmt 
Statement -> . PrintStmt 
StmtList -> .
StmtList -> . IfStmt StmtList 
StmtList -> . Statement 
StmtList -> . Statement NEWLINE StmtList 

86:
IfStmt -> if Condition : NEWLINE INDENT StmtList . DEDENT 
IfStmt -> if Condition : NEWLINE INDENT StmtList . DEDENT ElifList 
IfStmt -> if Condition : NEWLINE INDENT StmtList . DEDENT ElseClause 

87:
ElifList -> . elif Condition : NEWLINE INDENT StmtList DEDENT 
ElifList -> . elif Condition : NEWLINE INDENT StmtList DEDENT ElifList 
ElifList -> . elif Condition : NEWLINE INDENT StmtList DEDENT ElseClause 
ElseClause -> . else : NEWLINE INDENT StmtList DEDENT 
IfStmt -> if Condition : NEWLINE INDENT StmtList DEDENT .
IfStmt -> if Condition : NEWLINE INDENT StmtList DEDENT . ElifList 
IfStmt -> if Condition : NEWLINE INDENT StmtList DEDENT . ElseClause 

88:
CONSTANT -> . BOOLEAN 
CONSTANT -> . FLOAT 
CONSTANT -> . INTEGER 
CONSTANT -> . STRING 
Condition -> . Expression 
Condition -> . Expression RelOp Expression 
ElifList -> elif . Condition : NEWLINE INDENT StmtList DEDENT 
ElifList -> elif . Condition : NEWLINE INDENT StmtList DEDENT ElifList 
ElifList -> elif . Condition : NEWLINE INDENT StmtList DEDENT ElseClause 
Expression -> . Expression + Term 
Expression -> . Expression - Term 
Expression -> . Term 
Expression -> . bool ( Expression ) 
Expression -> . float ( Expression ) 
Expression -> . input ( ) 
Expression -> . input ( Expression ) 
Expression -> . int ( Expression ) 
Expression -> . list ( Expression ) 
Expression -> . str ( Expression ) 
ListLiteral -> . [ ListElements ] 
Postfix -> . Primary 
Postfix -> . Primary [ Expression ] 
Primary -> . ( Expression ) 
Primary -> . CONSTANT 
Primary -> . IDENTIFIER 
Primary -> . ListLiteral 
Term -> . Postfix 
Term -> . Term * Postfix 
Term -> . Term / Postfix 

89:
ElseClause -> else . : NEWLINE INDENT StmtList DEDENT 

90:
IfStmt -> if Condition : NEWLINE INDENT StmtList DEDENT ElseClause .

91:
IfStmt -> if Condition : NEWLINE INDENT StmtList DEDENT ElifList .

92:
ElifList -> elif Condition . : NEWLINE INDENT StmtList DEDENT 
ElifList -> elif Condition . : NEWLINE INDENT StmtList DEDENT ElifList 
ElifList -> elif Condition . : NEWLINE INDENT StmtList DEDENT ElseClause 

93:
ElseClause -> else : . NEWLINE INDENT StmtList DEDENT 

94:
ElifList -> elif Condition : . NEWLINE INDENT StmtList DEDENT 
ElifList -> elif Condition : . NEWLINE INDENT StmtList DEDENT ElifList 
ElifList -> elif Condition : . NEWLINE INDENT StmtList DEDENT ElseClause 

95:
ElseClause -> else : NEWLINE . INDENT StmtList DEDENT 

96:
ElifList -> elif Condition : NEWLINE . INDENT StmtList DEDENT 
ElifList -> elif Condition : NEWLINE . INDENT StmtList DEDENT ElifList 
ElifList -> elif Condition : NEWLINE . INDENT StmtList DEDENT ElseClause 

97:
AssignmentStmt -> . IDENTIFIER = Expression 
ElseClause -> else : NEWLINE INDENT . StmtList DEDENT 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT ElifList 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT ElseClause 
PrintStmt -> . print ( Expression ) 
Statement -> . AssignmentStmt 
Statement -> . IfStmt 
Statement -> . PrintStmt 
StmtList -> .
StmtList -> . IfStmt StmtList 
StmtList -> . Statement 
StmtList -> . Statement NEWLINE StmtList 

98:
AssignmentStmt -> . IDENTIFIER = Expression 
ElifList -> elif Condition : NEWLINE INDENT . StmtList DEDENT 
ElifList -> elif Condition : NEWLINE INDENT . StmtList DEDENT ElifList 
ElifList -> elif Condition : NEWLINE INDENT . StmtList DEDENT ElseClause 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT ElifList 
IfStmt -> . if Condition : NEWLINE INDENT StmtList DEDENT ElseClause 
PrintStmt -> . print ( Expression ) 
Statement -> . AssignmentStmt 
Statement -> . IfStmt 
Statement -> . PrintStmt 
StmtList -> .
StmtList -> . IfStmt StmtList 
StmtList -> . Statement 
StmtList -> . Statement NEWLINE StmtList 

99:
ElseClause -> else : NEWLINE INDENT StmtList . DEDENT 

100:
ElifList -> elif Condition : NEWLINE INDENT StmtList . DEDENT 
ElifList -> elif Condition : NEWLINE INDENT StmtList . DEDENT ElifList 
ElifList -> elif Condition : NEWLINE INDENT StmtList . DEDENT ElseClause 

101:
ElseClause -> else : NEWLINE INDENT StmtList DEDENT .

102:
ElifList -> . elif Condition : NEWLINE INDENT StmtList DEDENT 
ElifList -> elif Condition : NEWLINE INDENT StmtList DEDENT .
ElifList -> . elif Condition : NEWLINE INDENT StmtList DEDENT ElifList 
ElifList -> elif Condition : NEWLINE INDENT StmtList DEDENT . ElifList 
ElifList -> . elif Condition : NEWLINE INDENT StmtList DEDENT ElseClause 
ElifList -> elif Condition : NEWLINE INDENT StmtList DEDENT . ElseClause 
ElseClause -> . else : NEWLINE INDENT StmtList DEDENT 

103:
ElifList -> elif Condition : NEWLINE INDENT StmtList DEDENT ElseClause .

104:
ElifList -> elif Condition : NEWLINE INDENT StmtList DEDENT ElifList .

)
