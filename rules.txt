0: Term -> Term * Postfix 
1: Term -> Term / Postfix 
2: Term -> Postfix 
3: StmtList -> Statement NEWLINE StmtList 
4: StmtList -> 
5: Statement -> AssignmentStmt 
6: Statement -> InputStmt 
7: Statement -> PrintStmt 
8: Statement -> IfStmt 
9: PrintStmt -> print ( Expression ) 
10: Condition -> Expression RelOp Expression 
11: Condition -> Expression 
12: RelOp -> < 
13: RelOp -> > 
14: RelOp -> == 
15: RelOp -> != 
16: RelOp -> <= 
17: RelOp -> >= 
18: AssignmentStmt -> IDENTIFIER = Expression 
19: InputStmt -> IDENTIFIER = input ( STRING ) 
20: ListLiteral -> [ ListElements ] 
21: ElifList -> elif Condition : NEWLINE INDENT StmtList DEDENT ElifList 
22: Postfix -> Primary [ Expression ] 
23: Postfix -> Primary 
24: ElseClause -> else : NEWLINE INDENT StmtList DEDENT 
25: CONSTANT -> BOOLEAN 
26: CONSTANT -> STRING 
27: CONSTANT -> FLOAT 
28: CONSTANT -> INTEGER 
29: Expression -> Expression + Term 
30: Expression -> Expression - Term 
31: Expression -> Term 
32: Expression -> int ( Expression ) 
33: Expression -> float ( Expression ) 
34: Expression -> str ( Expression ) 
35: Expression -> bool ( Expression ) 
36: Expression -> list ( Expression ) 
37: Program -> StmtList 
38: ListElements -> Expression , ListElements 
39: ListElements -> Expression 
40: ListElements -> 
41: ElsePart -> ElifList ElseClause 
42: ElsePart -> ElifList 
43: ElsePart -> ElseClause 
44: ElsePart -> 
45: IfStmt -> if Condition : NEWLINE INDENT StmtList DEDENT ElsePart 
46: Primary -> CONSTANT 
47: Primary -> IDENTIFIER 
48: Primary -> ( Expression ) 
49: Primary -> ListLiteral 
